#
# compile it with: make --file=gpuMakefile
#
CC            = gcc
CXX           = g++
NVCC          = nvcc
DEFINES       = -DQT_NO_DEBUG
CFLAGS        = -m64 -pipe -Wextra -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -DDAE_MAJOR=1 -DDAE_MINOR=1 -DDAE_BUILD=1 -DdaeSuperLU_CUDA -Wextra -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
NVCCFLAGS     = -m64 -fPIC -DDEBUGlevel=0 -DPRNTlevel=0 -DdaeDEBUGlevel=1 -DAdd_ -DUSE_VENDOR_BLAS -D__OPENMP -DSuperLU_DYNAMIC_SNODE_STORE=0

INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4 -I/usr/include/boost -I/usr/include/python2.6 -I/usr/lib/pymodules/python2.6/numpy/core/include/numpy -I/usr/share/pyshared -I/usr/lib/python2.6/dist-packages -I../idas/build/include -I../superlu_cuda -I/usr/local/cuda/include -I.
NVCCINCPATH    = -I. -I../superlu_cuda -I/usr/local/cuda/include
LINK          = g++
LFLAGS        = -m64 -Wl,-O1 -shared -Wl,-soname,libSuperLU.so.1
LIBS          = $(SUBLIBS)  -L../release -L/usr/lib -lboost_python -L/usr/local/cuda/lib64 -lcuda -lcudart -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES = stdafx.cpp \
		dllmain.cpp \
		dae_python.cpp \
		superlu_la_solver.cpp \
		superlu_mt_gpu.cu
		
OBJECTS = release/stdafx.o \
		release/dllmain.o \
		release/dae_python.o \
		release/superlu_la_solver.o \
		release/superlu_mt_gpu.o

DESTDIR       = ../release/
TARGET        = libSuperLU.so.1.1.1
TARGETA       = ../release/libSuperLU.a
TARGETD       = libSuperLU.so.1.1.1
TARGET0       = libSuperLU.so
TARGET1       = libSuperLU.so.1
TARGET2       = libSuperLU.so.1.1

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

.cu.o:
	$(NVCC) -c $(NVCCFLAGS) $(NVCCINCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../release/$(TARGET)

../release/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../release/ || $(MKDIR) ../release/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../release/$(TARGET)
	-$(DEL_FILE) ../release/$(TARGET0)
	-$(DEL_FILE) ../release/$(TARGET1)
	-$(DEL_FILE) ../release/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../release/
	cp -f ../release/libSuperLU.so.1.1.1 ../release/pySuperLU_CUDA.so



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

dist: 
	@$(CHK_DIR_EXISTS) release/SuperLU1.1.1 || $(MKDIR) release/SuperLU1.1.1 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/SuperLU1.1.1/ && $(COPY_FILE) --parents ../config.h ../dae_develop.h ../dae.h stdafx.h superlu_la_solver.h superlu_mt_gpu.h release/SuperLU1.1.1/ && $(COPY_FILE) --parents stdafx.cpp dllmain.cpp dae_python.cpp superlu_la_solver.cpp release/SuperLU1.1.1/ && (cd `dirname release/SuperLU1.1.1` && $(TAR) SuperLU1.1.1.tar SuperLU1.1.1 && $(COMPRESS) SuperLU1.1.1.tar) && $(MOVE) `dirname release/SuperLU1.1.1`/SuperLU1.1.1.tar.gz . && $(DEL_FILE) -r release/SuperLU1.1.1


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core

compiler_clean:

####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../release/$(TARGET) 
	-$(DEL_FILE) ../release/$(TARGET0) ../release/$(TARGET1) ../release/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

####### Compile

release/stdafx.o: stdafx.cpp stdafx.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/stdafx.o stdafx.cpp

release/dllmain.o: dllmain.cpp stdafx.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/dllmain.o dllmain.cpp

release/dae_python.o: dae_python.cpp stdafx.h \
		superlu_la_solver.h \
		../IDAS_DAESolver/ida_la_solver_interface.h \
		../IDAS_DAESolver/solver_class_factory.h \
		../Core/solver.h \
		../Core/definitions.h \
		../Core/core.h \
		../Core/log.h \
		../IDAS_DAESolver/dae_array_matrix.h \
		../Core/helpers.h \
		superlu_mt_gpu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/dae_python.o dae_python.cpp

release/superlu_la_solver.o: superlu_la_solver.cpp stdafx.h \
		superlu_la_solver.h \
		../IDAS_DAESolver/ida_la_solver_interface.h \
		../IDAS_DAESolver/solver_class_factory.h \
		../Core/solver.h \
		../Core/definitions.h \
		../Core/core.h \
		../Core/log.h \
		../IDAS_DAESolver/dae_array_matrix.h \
		../Core/helpers.h \
		superlu_mt_gpu.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/superlu_la_solver.o superlu_la_solver.cpp

release/superlu_mt_gpu.o: superlu_mt_gpu.cu superlu_mt_gpu.h
	$(NVCC) -arch=sm_21 -m64 --compiler-options "$(CXXFLAGS) $(NVCCFLAGS)" $(NVCCINCPATH) -c -o release/superlu_mt_gpu.o superlu_mt_gpu.cu



