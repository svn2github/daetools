/***********************************************************************************
*                 DAE Tools Project: www.daetools.com
*                 Copyright (C) Dragan Nikolic, 2010
************************************************************************************
DAE Tools is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License version 3 as published by the Free Software
Foundation. DAE Tools is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with the
DAE Tools software; if not, see <http://www.gnu.org/licenses/>.
***********************************************************************************/
#if !defined(ADOLC_ADOUBLE_H)
#define ADOLC_ADOUBLE_H

#include <stdbool.h>
#include <stddef.h>

#ifndef real_t
#define real_t double
#endif

typedef struct  
{
    real_t m_dValue;
    real_t m_dDeriv;
} adouble;

adouble adouble_(real_t value, real_t derivative);

adouble sign_(adouble a);

adouble plus_(const adouble a, const adouble b);
adouble minus_(const adouble a, const adouble b);
adouble multi_(const adouble a, const adouble b);
adouble divide_(const adouble a, const adouble b);

adouble exp_(const adouble a);
adouble log_(const adouble a);
adouble log10_(const adouble a);
adouble sqrt_(const adouble a);
adouble sin_(const adouble a);
adouble cos_(const adouble a);
adouble tan_(const adouble a);
adouble asin_(const adouble a);
adouble acos_(const adouble a);
adouble atan_(const adouble a);

adouble sinh_(const adouble a);
adouble cosh_(const adouble a);
adouble tanh_(const adouble a);
adouble asinh_(const adouble a);
adouble acosh_(const adouble a);
adouble atanh_(const adouble a);
adouble atan2_(const adouble a, const adouble b);

adouble pow_(const adouble a, const adouble b);

/* ceil/floor are non-differentiable: should I remove them? */
adouble ceil_(const adouble a);
adouble floor_(const adouble a);

adouble abs_(const adouble a);
adouble max_(const adouble a, const adouble b);
adouble min_(const adouble a, const adouble b);

bool neq_(const adouble a, const adouble b);
bool eq_(const adouble a, const adouble b);
bool lteq_(const adouble a, const adouble b);
bool gteq_(const adouble a, const adouble b);
bool gt_(const adouble a, const adouble b);
bool lt_(const adouble a, const adouble b);

real_t getValue(const adouble* a);
void   setValue(adouble* a, const real_t v); 
real_t getDerivative(const adouble* a);
void   setDerivative(adouble* a, real_t v); 

real_t makeNaN();

bool compareStrings(const char* s1, const char* s2);

#endif
