# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'simulation_explorer.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_SimulationExplorer(object):
    def setupUi(self, SimulationExplorer):
        SimulationExplorer.setObjectName("SimulationExplorer")
        SimulationExplorer.setWindowModality(QtCore.Qt.WindowModal)
        SimulationExplorer.resize(760, 550)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(SimulationExplorer.sizePolicy().hasHeightForWidth())
        SimulationExplorer.setSizePolicy(sizePolicy)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(SimulationExplorer)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(SimulationExplorer)
        self.tabWidget.setMinimumSize(QtCore.QSize(250, 0))
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_Runtume = QtWidgets.QWidget()
        self.tab_Runtume.setObjectName("tab_Runtume")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tab_Runtume)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setObjectName("formLayout")
        self.testNameLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.testNameLabel.setMinimumSize(QtCore.QSize(200, 0))
        self.testNameLabel.setObjectName("testNameLabel")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.testNameLabel)
        self.simulationNameEdit = QtWidgets.QLineEdit(self.tab_Runtume)
        self.simulationNameEdit.setEnabled(True)
        self.simulationNameEdit.setText("")
        self.simulationNameEdit.setObjectName("simulationNameEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.simulationNameEdit)
        self.timeHorizonLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.timeHorizonLabel.setObjectName("timeHorizonLabel")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.timeHorizonLabel)
        self.timeHorizonEdit = QtWidgets.QLineEdit(self.tab_Runtume)
        self.timeHorizonEdit.setInputMask("")
        self.timeHorizonEdit.setObjectName("timeHorizonEdit")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.timeHorizonEdit)
        self.reportingIntervalLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.reportingIntervalLabel.setObjectName("reportingIntervalLabel")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.reportingIntervalLabel)
        self.reportingIntervalEdit = QtWidgets.QLineEdit(self.tab_Runtume)
        self.reportingIntervalEdit.setObjectName("reportingIntervalEdit")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.reportingIntervalEdit)
        self.relativeToleranceLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.relativeToleranceLabel.setObjectName("relativeToleranceLabel")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.relativeToleranceLabel)
        self.relativeToleranceEdit = QtWidgets.QLineEdit(self.tab_Runtume)
        self.relativeToleranceEdit.setObjectName("relativeToleranceEdit")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.relativeToleranceEdit)
        self.daesolverLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.daesolverLabel.setObjectName("daesolverLabel")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.daesolverLabel)
        self.daesolverComboBox = QtWidgets.QComboBox(self.tab_Runtume)
        self.daesolverComboBox.setObjectName("daesolverComboBox")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.daesolverComboBox)
        self.lasolverLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.lasolverLabel.setObjectName("lasolverLabel")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.lasolverLabel)
        self.lasolverComboBox = QtWidgets.QComboBox(self.tab_Runtume)
        self.lasolverComboBox.setObjectName("lasolverComboBox")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.lasolverComboBox)
        self.dataReporterLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.dataReporterLabel.setObjectName("dataReporterLabel")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.dataReporterLabel)
        self.datareporterComboBox = QtWidgets.QComboBox(self.tab_Runtume)
        self.datareporterComboBox.setObjectName("datareporterComboBox")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.datareporterComboBox)
        self.logLabel = QtWidgets.QLabel(self.tab_Runtume)
        self.logLabel.setObjectName("logLabel")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.logLabel)
        self.logComboBox = QtWidgets.QComboBox(self.tab_Runtume)
        self.logComboBox.setObjectName("logComboBox")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.logComboBox)
        self.verticalLayout_6.addLayout(self.formLayout)
        self.tabWidget.addTab(self.tab_Runtume, "")
        self.tab_Domains = QtWidgets.QWidget()
        self.tab_Domains.setObjectName("tab_Domains")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.tab_Domains)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.treeDomains = QtWidgets.QTreeWidget(self.tab_Domains)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeDomains.sizePolicy().hasHeightForWidth())
        self.treeDomains.setSizePolicy(sizePolicy)
        self.treeDomains.setMinimumSize(QtCore.QSize(400, 200))
        self.treeDomains.setAlternatingRowColors(True)
        self.treeDomains.setObjectName("treeDomains")
        self.treeDomains.header().setDefaultSectionSize(300)
        self.treeDomains.header().setMinimumSectionSize(100)
        self.horizontalLayout.addWidget(self.treeDomains)
        self.frameDomains = QtWidgets.QFrame(self.tab_Domains)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frameDomains.sizePolicy().hasHeightForWidth())
        self.frameDomains.setSizePolicy(sizePolicy)
        self.frameDomains.setMinimumSize(QtCore.QSize(250, 200))
        self.frameDomains.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frameDomains.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameDomains.setObjectName("frameDomains")
        self.horizontalLayout.addWidget(self.frameDomains)
        self.tabWidget.addTab(self.tab_Domains, "")
        self.tab_Parameters = QtWidgets.QWidget()
        self.tab_Parameters.setObjectName("tab_Parameters")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.tab_Parameters)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.treeParameters = QtWidgets.QTreeWidget(self.tab_Parameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeParameters.sizePolicy().hasHeightForWidth())
        self.treeParameters.setSizePolicy(sizePolicy)
        self.treeParameters.setMinimumSize(QtCore.QSize(100, 200))
        self.treeParameters.setStyleSheet(" /*\n"
"QTreeWidget::branch:has-siblings:!adjoins-item {\n"
"     border-image: url(images/vline.png) 0;\n"
" }\n"
"\n"
" QTreeWidget::branch:has-siblings:adjoins-item {\n"
"     border-image: url(images/branch-more.png) 0;\n"
" }\n"
"\n"
" QTreeWidget::branch:!has-children:!has-siblings:adjoins-item {\n"
"     border-image: url(images/branch-end.png) 0;\n"
" }\n"
"\n"
" QTreeWidget::branch:has-children:!has-siblings:closed,\n"
" QTreeWidget::branch:closed:has-children:has-siblings {\n"
"         border-image: none;\n"
"         image: url(images/branch-closed.png);\n"
" }\n"
"\n"
" QTreeWidget::branch:open:has-children:!has-siblings,\n"
" QTreeWidget::branch:open:has-children:has-siblings  {\n"
"         border-image: none;\n"
"         image: url(images/branch-open.png);\n"
" }\n"
"*/\n"
"")
        self.treeParameters.setAlternatingRowColors(True)
        self.treeParameters.setObjectName("treeParameters")
        self.treeParameters.header().setDefaultSectionSize(300)
        self.treeParameters.header().setMinimumSectionSize(100)
        self.horizontalLayout_3.addWidget(self.treeParameters)
        self.frameParameters = QtWidgets.QFrame(self.tab_Parameters)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frameParameters.sizePolicy().hasHeightForWidth())
        self.frameParameters.setSizePolicy(sizePolicy)
        self.frameParameters.setMinimumSize(QtCore.QSize(250, 200))
        self.frameParameters.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frameParameters.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameParameters.setObjectName("frameParameters")
        self.horizontalLayout_3.addWidget(self.frameParameters)
        self.tabWidget.addTab(self.tab_Parameters, "")
        self.tab_InitialConditions = QtWidgets.QWidget()
        self.tab_InitialConditions.setObjectName("tab_InitialConditions")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tab_InitialConditions)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.quazySteadyStateCheckBox = QtWidgets.QCheckBox(self.tab_InitialConditions)
        self.quazySteadyStateCheckBox.setEnabled(False)
        self.quazySteadyStateCheckBox.setObjectName("quazySteadyStateCheckBox")
        self.horizontalLayout_4.addWidget(self.quazySteadyStateCheckBox)
        self.initialConditionsLabel = QtWidgets.QLabel(self.tab_InitialConditions)
        self.initialConditionsLabel.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.initialConditionsLabel.sizePolicy().hasHeightForWidth())
        self.initialConditionsLabel.setSizePolicy(sizePolicy)
        self.initialConditionsLabel.setMinimumSize(QtCore.QSize(0, 0))
        self.initialConditionsLabel.setObjectName("initialConditionsLabel")
        self.horizontalLayout_4.addWidget(self.initialConditionsLabel)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.treeInitialConditions = QtWidgets.QTreeWidget(self.tab_InitialConditions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeInitialConditions.sizePolicy().hasHeightForWidth())
        self.treeInitialConditions.setSizePolicy(sizePolicy)
        self.treeInitialConditions.setMinimumSize(QtCore.QSize(400, 200))
        self.treeInitialConditions.setAlternatingRowColors(True)
        self.treeInitialConditions.setObjectName("treeInitialConditions")
        self.treeInitialConditions.header().setDefaultSectionSize(300)
        self.treeInitialConditions.header().setMinimumSectionSize(100)
        self.horizontalLayout_7.addWidget(self.treeInitialConditions)
        self.frameInitialConditions = QtWidgets.QFrame(self.tab_InitialConditions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frameInitialConditions.sizePolicy().hasHeightForWidth())
        self.frameInitialConditions.setSizePolicy(sizePolicy)
        self.frameInitialConditions.setMinimumSize(QtCore.QSize(250, 200))
        self.frameInitialConditions.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frameInitialConditions.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameInitialConditions.setObjectName("frameInitialConditions")
        self.horizontalLayout_7.addWidget(self.frameInitialConditions)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.tabWidget.addTab(self.tab_InitialConditions, "")
        self.tab_DOFs = QtWidgets.QWidget()
        self.tab_DOFs.setObjectName("tab_DOFs")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.tab_DOFs)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.treeDOFs = QtWidgets.QTreeWidget(self.tab_DOFs)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeDOFs.sizePolicy().hasHeightForWidth())
        self.treeDOFs.setSizePolicy(sizePolicy)
        self.treeDOFs.setMinimumSize(QtCore.QSize(400, 200))
        self.treeDOFs.setAlternatingRowColors(True)
        self.treeDOFs.setObjectName("treeDOFs")
        self.treeDOFs.header().setDefaultSectionSize(300)
        self.treeDOFs.header().setMinimumSectionSize(100)
        self.horizontalLayout_6.addWidget(self.treeDOFs)
        self.frameDOFs = QtWidgets.QFrame(self.tab_DOFs)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frameDOFs.sizePolicy().hasHeightForWidth())
        self.frameDOFs.setSizePolicy(sizePolicy)
        self.frameDOFs.setMinimumSize(QtCore.QSize(250, 200))
        self.frameDOFs.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frameDOFs.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameDOFs.setObjectName("frameDOFs")
        self.horizontalLayout_6.addWidget(self.frameDOFs)
        self.tabWidget.addTab(self.tab_DOFs, "")
        self.tab_StateTransitions = QtWidgets.QWidget()
        self.tab_StateTransitions.setObjectName("tab_StateTransitions")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.tab_StateTransitions)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.treeSTNs = QtWidgets.QTreeWidget(self.tab_StateTransitions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeSTNs.sizePolicy().hasHeightForWidth())
        self.treeSTNs.setSizePolicy(sizePolicy)
        self.treeSTNs.setMinimumSize(QtCore.QSize(400, 200))
        self.treeSTNs.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.treeSTNs.setAlternatingRowColors(True)
        self.treeSTNs.setColumnCount(1)
        self.treeSTNs.setObjectName("treeSTNs")
        self.treeSTNs.header().setVisible(False)
        self.treeSTNs.header().setDefaultSectionSize(300)
        self.treeSTNs.header().setMinimumSectionSize(100)
        self.horizontalLayout_5.addWidget(self.treeSTNs)
        self.tabWidget.addTab(self.tab_StateTransitions, "")
        self.tab_Results = QtWidgets.QWidget()
        self.tab_Results.setObjectName("tab_Results")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.tab_Results)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.treeOutputVariables = QtWidgets.QTreeWidget(self.tab_Results)
        self.treeOutputVariables.setAlternatingRowColors(True)
        self.treeOutputVariables.setColumnCount(1)
        self.treeOutputVariables.setObjectName("treeOutputVariables")
        self.treeOutputVariables.header().setVisible(False)
        self.treeOutputVariables.header().setDefaultSectionSize(300)
        self.treeOutputVariables.header().setMinimumSectionSize(100)
        self.verticalLayout_8.addWidget(self.treeOutputVariables)
        self.tabWidget.addTab(self.tab_Results, "")
        self.verticalLayout_2.addWidget(self.tabWidget)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.buttonCancel = QtWidgets.QPushButton(SimulationExplorer)
        self.buttonCancel.setMinimumSize(QtCore.QSize(100, 0))
        self.buttonCancel.setAutoDefault(False)
        self.buttonCancel.setDefault(False)
        self.buttonCancel.setObjectName("buttonCancel")
        self.horizontalLayout_2.addWidget(self.buttonCancel)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.buttonSaveRuntimeSettingsAsJSON = QtWidgets.QPushButton(SimulationExplorer)
        self.buttonSaveRuntimeSettingsAsJSON.setAutoDefault(False)
        self.buttonSaveRuntimeSettingsAsJSON.setObjectName("buttonSaveRuntimeSettingsAsJSON")
        self.horizontalLayout_2.addWidget(self.buttonSaveRuntimeSettingsAsJSON)
        self.buttonGenerateCode = QtWidgets.QPushButton(SimulationExplorer)
        self.buttonGenerateCode.setAutoDefault(False)
        self.buttonGenerateCode.setObjectName("buttonGenerateCode")
        self.horizontalLayout_2.addWidget(self.buttonGenerateCode)
        self.buttonUpdateSimulationAndClose = QtWidgets.QPushButton(SimulationExplorer)
        self.buttonUpdateSimulationAndClose.setAutoDefault(False)
        self.buttonUpdateSimulationAndClose.setDefault(True)
        self.buttonUpdateSimulationAndClose.setObjectName("buttonUpdateSimulationAndClose")
        self.horizontalLayout_2.addWidget(self.buttonUpdateSimulationAndClose)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)

        self.retranslateUi(SimulationExplorer)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(SimulationExplorer)

    def retranslateUi(self, SimulationExplorer):
        _translate = QtCore.QCoreApplication.translate
        SimulationExplorer.setWindowTitle(_translate("SimulationExplorer", "Simulation Explorer"))
        self.testNameLabel.setText(_translate("SimulationExplorer", "Simulation name"))
        self.timeHorizonLabel.setText(_translate("SimulationExplorer", "Time horizon, s"))
        self.timeHorizonEdit.setText(_translate("SimulationExplorer", "0.0"))
        self.reportingIntervalLabel.setText(_translate("SimulationExplorer", "Reporting interval, s"))
        self.reportingIntervalEdit.setText(_translate("SimulationExplorer", "0.0"))
        self.relativeToleranceLabel.setText(_translate("SimulationExplorer", "Relative Tolerance"))
        self.daesolverLabel.setText(_translate("SimulationExplorer", "DAE Solver"))
        self.lasolverLabel.setText(_translate("SimulationExplorer", "LA Solver"))
        self.dataReporterLabel.setText(_translate("SimulationExplorer", "Data Reporter"))
        self.logLabel.setText(_translate("SimulationExplorer", "Log"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Runtume), _translate("SimulationExplorer", "Runtime"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_Runtume), _translate("SimulationExplorer", "<html><head/><body><p>Set the runtime data.</p></body></html>"))
        self.treeDomains.headerItem().setText(0, _translate("SimulationExplorer", "Name"))
        self.treeDomains.headerItem().setText(1, _translate("SimulationExplorer", "Value"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Domains), _translate("SimulationExplorer", "Domains"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_Domains), _translate("SimulationExplorer", "<html><head/><body><p>Set the data related to domains.</p></body></html>"))
        self.treeParameters.headerItem().setText(0, _translate("SimulationExplorer", "Name"))
        self.treeParameters.headerItem().setText(1, _translate("SimulationExplorer", "Value"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Parameters), _translate("SimulationExplorer", "Parameters"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_Parameters), _translate("SimulationExplorer", "<html><head/><body><p>Set the data related to parameters.</p></body></html>"))
        self.initialConditionsLabel.setText(_translate("SimulationExplorer", "Quasi Steady State InitialConditions"))
        self.treeInitialConditions.headerItem().setText(0, _translate("SimulationExplorer", "Name"))
        self.treeInitialConditions.headerItem().setText(1, _translate("SimulationExplorer", "Value"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_InitialConditions), _translate("SimulationExplorer", "InitialConditions"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_InitialConditions), _translate("SimulationExplorer", "<html><head/><body><p>Set the initial conditions for differential variables.</p></body></html>"))
        self.treeDOFs.headerItem().setText(0, _translate("SimulationExplorer", "Name"))
        self.treeDOFs.headerItem().setText(1, _translate("SimulationExplorer", "Value"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_DOFs), _translate("SimulationExplorer", "DoFs"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_DOFs), _translate("SimulationExplorer", "<html><head/><body><p>Set the values of assigned variables (Degrees of Freedom).</p></body></html>"))
        self.treeSTNs.headerItem().setText(0, _translate("SimulationExplorer", "Name"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_StateTransitions), _translate("SimulationExplorer", "STNs"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_StateTransitions), _translate("SimulationExplorer", "<html><head/><body><p>Set the data related to State Transition Networks.</p></body></html>"))
        self.treeOutputVariables.headerItem().setText(0, _translate("SimulationExplorer", "Name"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Results), _translate("SimulationExplorer", "Results"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_Results), _translate("SimulationExplorer", "<html><head/><body><p>Select variables to appear in the output.</p></body></html>"))
        self.buttonCancel.setToolTip(_translate("SimulationExplorer", "<html><head/><body><p>Close this form without updating the simulation.</p></body></html>"))
        self.buttonCancel.setText(_translate("SimulationExplorer", "Close"))
        self.buttonSaveRuntimeSettingsAsJSON.setToolTip(_translate("SimulationExplorer", "<html><head/><body><p>Save runtime settings in JSON format to the specified file.</p></body></html>"))
        self.buttonSaveRuntimeSettingsAsJSON.setText(_translate("SimulationExplorer", "Save Settings as JSON..."))
        self.buttonGenerateCode.setToolTip(_translate("SimulationExplorer", "<html><head/><body><p>Generate the code for a selected language (ANSI C, Modelica, FMI).</p></body></html>"))
        self.buttonGenerateCode.setText(_translate("SimulationExplorer", "Generate code..."))
        self.buttonUpdateSimulationAndClose.setToolTip(_translate("SimulationExplorer", "<html><head/><body><p>Update the simulation with the new values, call <span style=\" font-family:\'Courier New,courier\';\">simulation.Reinitialize()</span> and close this form.</p></body></html>"))
        self.buttonUpdateSimulationAndClose.setText(_translate("SimulationExplorer", "Update and close"))

