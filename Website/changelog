daetools (1.0.1) stable; urgency=low

  * Implemented sensitivity calculation (through Sundials IDAS DAE solver).
  * Implemented steady-state and dynamic optimization capabilities (Bonmin).
    - the optimization variables can be Continuous, Integer or Binary
    - the constraints can be Equality or Non-equality constraints
    Second order derivatives cannot be calculated. The Quasi-Newton 
    approximation of second derivatives by IPOPT's limited-memory 
    quasi-Newton method (L-BFGS) is used instead.
  * Compiled Trilinos Amesos for Windows (KLU, SuperLU and Lapack LA solvers).
  * GNU/Linux port now uses and installs SuperLU 4.1 as a shared library.
    Windows port uses the same version but as a static library.
  * Trilinos Amesos is used as static libraries and not distributed anymore. 
  * Modified installation packages so that binary packages for pyAmdACML,
    pyIntelMKL, pyIntelPardiso are not distributed anymore. 
    Users have to download them and compile the projects themselves.
  * Modified installation packages so that header cDAE files and binaries
    are not installed by default.Users have to download and compile the 
    projects themselves.
  * The simulation now can be reset and re-ran by using the functions Reset
    and ReRun from daeSimulation.
  * Equations and state transition networks now can be specified in the 
    constructor. However to access the runtime information about domains and
    parameters one still has to use DeclareEquations() function.
  * Changes about and added credits and licence information for all free 
    software libraries used.
  * Added Documentation menu item to daePlotter.
  * adSingleNodeArray and adConstantNodeArray changed. Now the adouble_array
    class supports the operation on the arrays of sixe 1 and size n.
  * From all template functions removed non-necessary parts (never executed).
  * The new folder structure defined:
    - Activity, Core, DataReporting, IDAS_DAESolver, BONMIN_MINLPSolver
    - pyActivity, pyCore, pyDataReporting, pyIDAS, pyBONMIN
  * Added function IsLinear and IsFunctionOfVariables to adNode.
    Their purpose is to help in determining the type of equations/constraints:
    linear or nonlinear.
  * Updated documentation {installing, getting started and user guide}
  * Added new tutorials covering the basics of optimization
  * Added several new functions to daeLog_t class.
  * Fixed bugs:
    - in the functions pow, sqrt, log, log10 (division by zero). 
    - in the integral function
    - in the function CreatePoints in daeDomain;
      the lower bound was always set to 0.
    - in saving d and dt functions as MathML.
    - in functions Create_adouble and Calculate_dt in daeModel.

 -- Dragan Nikolic <dnikolic at daetools.com>  Tue, 04 Jan 2011 06:00:00 +0100

daetools (1.0.5) stable; urgency=low

  * Added opearators + - * / that accept mixed adouble and adouble_array 
    arguments. As a result, they return an adouble_array of the same size as 
    the adouble_array argument
  * Added functions d {partial derivative} and dt {derivative per time} to 
    daeModel class. Only opearators + - * / are supported. They take 
    expression as an argument and evaluate its time or partial derivative.
  * Added about box to daePlotter and license information.
  * Added daetools.cfg {in .info file format}. All core libraries use the 
    settings from that file.
  * Added two new functions to daeModel:
    - SaveModelReport {replaced the global daeSaveModel function}
    - SaveRuntimeModelReport to export the runtime information about a 
      simulation. It is basically equivalent to the model report with 
      added equations after a discretization.
  * Added support for initialization of complex models. Values of model 
    variables now can be exported to a binary file and used later during 
    the initialization. Two new functions are added to daeSimulation: 
    Load/StoreInitializationValues
    The file format is:
    - NoVariables (number of variables): 32 bit unsigned integer;
    - Variable values: array of size [NoVariables] of 64 bit 
      (double precision) floating point numbers;
  * Fixed functions Pause and Resume in daeDynamicActivity enabling pausing 
    and resuming of a simulation. Mutexes are not used any more.
  * Improved daeSimulator to support Pause and Resume functions
  * Modified installation packages so that the file permissions, owner and 
    group are fixed.
  * Updated documentation {installing, getting started and user guide}
  * Debian packages pass Lintian test with no errors. 
  * All tutorials modified so that they support two execution modes:
    - gui (with daeSimulator GUI);
    - console
    The execution modes are specified at the command line:
      python tutorial.py gui
      python tutorial.py console
    Default is gui.
  * Matplotlib 3D plot replaced by the Mayavi2 surface plot

 -- Dragan Nikolic <dnikolic at daetools.com>  Fri, 10 Dec 2010 06:00:00 +0100

daetools (1.0.4) stable; urgency=low

  * Fixed functions sum, product, integral, average, min, max that operate on 
    adouble_array objects
  * Fixed functions sqrt, exp, log, log10, abs, sin, cos, tan, asin, acos, atan
    that operate on adouble_array objects
  * Installer packages for some of the oses/platforms were not built to 
    support Trilinos Amesos with SuperLU and Umfpack libraires; fixed now
  * Added function SetActiveState(string) to daeSTN class in cDAE and pyDAE
  * Few tutorial updates
  * Some other minor fixes

 -- Dragan Nikolic <dnikolic at daetools.com>  Wed, 01 Dec 2010 06:00:00 +0100

daetools (1.0.3) stable; urgency=low

  * Added Trilinos Amesos support for Umfpack
  * Finalized Debian Lenny armel port
  * pyDAE module separated into four modules: pyCore, pyDataReporting, 
    pySolver, pyActivity
  * @QtCore.pyqtSlot (the new slot style) removed; the old slot style is in 
    use now (because the default qt version in Debian Lenny is 4.4; 4.5+ is 
    required for the new style)
  * Added daeSimulator
  * daeRunExamples adapted to use daeSimulator
  * Atlas Lapack LA solver removed
  * Some other minor fixes 

 -- Dragan Nikolic <dnikolic at daetools.com>  Fri, 19 Nov 2010 06:00:00 +0100
